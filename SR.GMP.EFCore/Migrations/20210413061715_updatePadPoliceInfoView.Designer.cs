// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SR.GMP.EFCore;

namespace SR.GMP.EFCore.Migrations
{
    [DbContext(typeof(GMPContext))]
    [Migration("20210413061715_updatePadPoliceInfoView")]
    partial class updatePadPoliceInfoView
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SR.GMP.DataEntity.Alarm.GMP_ALARM_ITEM", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CENT_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CREATOR_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ITEM_NAME")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid?>("MODIFIER_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("MODIFY_AT")
                        .HasColumnType("datetime2");

                    b.Property<int>("PRIORITY")
                        .HasColumnType("int");

                    b.Property<int>("STATE")
                        .HasColumnType("int");

                    b.Property<string>("TREAT_MEASURE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TREAT_PROCESS")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CENT_ID");

                    b.HasIndex("CREATOR_ID");

                    b.HasIndex("MODIFIER_ID");

                    b.ToTable("GMP_ALARM_ITEM");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.Alarm.GMP_ALARM_ITEM_RULE", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CREATOR_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EVENT_ITEM_CODE")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("ITEM_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LOGIC_TYPE")
                        .HasColumnType("int");

                    b.Property<Guid?>("MODIFIER_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("MODIFY_AT")
                        .HasColumnType("datetime2");

                    b.Property<string>("MONITOR_ITEM_CODE")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("RULE_TYPE")
                        .HasColumnType("int");

                    b.Property<int>("SORT_NUM")
                        .HasColumnType("int");

                    b.Property<int>("STATE")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CREATOR_ID");

                    b.HasIndex("ITEM_ID");

                    b.HasIndex("MODIFIER_ID");

                    b.ToTable("GMP_ALARM_ITEM_RULE");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.Alarm.GMP_ALARM_RECORD", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ALARM_INFO")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("ALARM_ITEM_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ALARM_ITEM_NAME")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("BED_LABEL")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("CENT_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CLASS_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CLASS_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CREATE_AT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DATA_RECORD_TIME")
                        .HasColumnType("datetime2");

                    b.Property<string>("DOCTOR_NAME")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("HANDLE_TIME")
                        .HasColumnType("datetime2");

                    b.Property<string>("NURSE_NAME")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("PATIENT_AGE")
                        .HasColumnType("int");

                    b.Property<string>("PATIENT_EXT_ID")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("PATIENT_NAME")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("PATIENT_SEX")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("PRIORITY")
                        .HasColumnType("int");

                    b.Property<int>("STATE")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("GMP_ALARM_RECORD");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.Alarm.GMP_ALARM_RECORD_DATA", b =>
                {
                    b.Property<Guid>("ALARM_RECORD_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MONITOR_ITEM_CODE")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IS_ALARM")
                        .HasColumnType("bit");

                    b.Property<string>("MONITOR_ITEM_NAME")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("MONITOR_ITEM_VALUE")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("RULE_TYPE")
                        .HasColumnType("int");

                    b.HasKey("ALARM_RECORD_ID", "MONITOR_ITEM_CODE");

                    b.ToTable("GMP_ALARM_RECORD_DATA");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.Alarm.GMP_ALARM_RULE_CONFIG", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CREATOR_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IS_CONTAINMAX")
                        .HasColumnType("bit");

                    b.Property<bool>("IS_CONTAINMIN")
                        .HasColumnType("bit");

                    b.Property<bool>("IS_DIFFVALUE")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MAX_VALUE")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("MIN_VALUE")
                        .HasColumnType("decimal(8,2)");

                    b.Property<Guid?>("MODIFIER_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("MODIFY_AT")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RULE_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("STATE")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CREATOR_ID");

                    b.HasIndex("MODIFIER_ID");

                    b.HasIndex("RULE_ID");

                    b.ToTable("GMP_ALARM_RULE_CONFIG");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.Dictionary.GMP_EVENT_ITEM", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("ITEM_CODE")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ITEM_NAME")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("SORT_CODE")
                        .HasColumnType("int");

                    b.Property<int>("STATE")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("GMP_EVENT_ITEM");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.Dictionary.GMP_MONITOR_ITEM", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("ITEM_CODE")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ITEM_NAME")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("SORT_CODE")
                        .HasColumnType("int");

                    b.Property<int>("STATE")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("GMP_MONITOR_ITEM");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ITEM_CODE = "VENOUS_PRESSURE",
                            ITEM_NAME = "静脉压",
                            STATE = 1
                        },
                        new
                        {
                            ID = 2,
                            ITEM_CODE = "ARTERIAL_PRESSURE",
                            ITEM_NAME = "动脉压",
                            STATE = 1
                        },
                        new
                        {
                            ID = 3,
                            ITEM_CODE = "TRANS_PRESSURE",
                            ITEM_NAME = "跨膜压",
                            STATE = 1
                        },
                        new
                        {
                            ID = 4,
                            ITEM_CODE = "BLOOD_FLOW",
                            ITEM_NAME = "血流量",
                            STATE = 1
                        },
                        new
                        {
                            ID = 5,
                            ITEM_CODE = "BODY_TEMPERATURE",
                            ITEM_NAME = "体温",
                            STATE = 1
                        },
                        new
                        {
                            ID = 6,
                            ITEM_CODE = "SYSTOLIC_BLOOD_PRESSURE",
                            ITEM_NAME = "收缩压",
                            STATE = 1
                        },
                        new
                        {
                            ID = 7,
                            ITEM_CODE = "STRETCH_PRESSURE",
                            ITEM_NAME = "舒张压",
                            STATE = 1
                        },
                        new
                        {
                            ID = 8,
                            ITEM_CODE = "HEART_RATE",
                            ITEM_NAME = "心率",
                            STATE = 1
                        },
                        new
                        {
                            ID = 9,
                            ITEM_CODE = "ELECTRICAL_CONDUCTIVITY",
                            ITEM_NAME = "电导率",
                            STATE = 1
                        });
                });

            modelBuilder.Entity("SR.GMP.DataEntity.System.SYS_DICT_CATEGORY", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CREATOR_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MODIFIER_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("MODIFY_AT")
                        .HasColumnType("datetime2");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid?>("P_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SORT_CODE")
                        .HasColumnType("int");

                    b.Property<int>("STATE")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CREATOR_ID");

                    b.HasIndex("MODIFIER_ID");

                    b.ToTable("SYS_DICT_CATEGORY");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.System.SYS_DICT_ITEM", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CATEGORY_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CREATOR_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DESC")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid?>("MODIFIER_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("MODIFY_AT")
                        .HasColumnType("datetime2");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("PY")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid?>("P_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SORT_CODE")
                        .HasColumnType("int");

                    b.Property<int>("STATE")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CATEGORY_ID");

                    b.HasIndex("CREATOR_ID");

                    b.HasIndex("MODIFIER_ID");

                    b.ToTable("SYS_DICT_ITEM");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.System.SYS_INST", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ADDRESS")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CREATOR_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MODIFIER_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("MODIFY_AT")
                        .HasColumnType("datetime2");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("STATE")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CREATOR_ID");

                    b.HasIndex("MODIFIER_ID");

                    b.ToTable("SYS_INST");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.System.SYS_INST_CENTER", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CENT_DESC")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CREATOR_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EXT_ID")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("INST_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MODIFIER_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("MODIFY_AT")
                        .HasColumnType("datetime2");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PY")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SORT_CODE")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("STATE")
                        .HasColumnType("int");

                    b.Property<int>("TYPE_CODE")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CREATOR_ID");

                    b.HasIndex("INST_ID");

                    b.HasIndex("MODIFIER_ID");

                    b.ToTable("SYS_INST_CENTER");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.System.SYS_USER", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ACCOUNT")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CREATOR_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GENDER")
                        .HasColumnType("int");

                    b.Property<string>("JOB_NO")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid?>("MODIFIER_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("MODIFY_AT")
                        .HasColumnType("datetime2");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PWD")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("STATE")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CREATOR_ID");

                    b.HasIndex("MODIFIER_ID");

                    b.ToTable("SYS_USER");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.ViewModel.BaseCountView", b =>
                {
                    b.Property<int>("BedCount")
                        .HasColumnType("int");

                    b.Property<string>("CENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoctorCount")
                        .HasColumnType("int");

                    b.Property<int>("NurseCount")
                        .HasColumnType("int");

                    b.Property<int>("PatientCount")
                        .HasColumnType("int");

                    b.ToView("view_BaseCountInfo");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.ViewModel.DeviceTreatDataView", b =>
                {
                    b.Property<string>("CENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DEFAULT_TREAT_TIME")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ELAPSEDTIME")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("IS_DOWN")
                        .HasColumnType("bit");

                    b.Property<bool?>("IS_UP")
                        .HasColumnType("bit");

                    b.Property<string>("PATIENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RECORD_TIME")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TRAETMENT_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("TREATMENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UF")
                        .HasColumnType("decimal(18,2)");

                    b.ToView("view_DeviceTreatDataInfo");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.ViewModel.EquipmentCountView", b =>
                {
                    b.Property<string>("CENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EquipmentCount")
                        .HasColumnType("int");

                    b.Property<string>("EquipmentName")
                        .HasColumnType("nvarchar(max)");

                    b.ToView("view_EquipmentCountInfo");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.ViewModel.EventViewData", b =>
                {
                    b.Property<string>("BED_LABEL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CLASS_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CLASS_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("datetime2");

                    b.Property<string>("DOCTOR_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EVENT_CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EVENT_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NURSE_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PATIENT_AGE")
                        .HasColumnType("int");

                    b.Property<string>("PATIENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PATIENT_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PATIENT_SEX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RECORD_TIME")
                        .HasColumnType("datetime2");

                    b.ToView("view_HD_EVENT");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.ViewModel.MonitorDataView", b =>
                {
                    b.Property<decimal?>("ARTERIAL_PRESSURE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ATICOAGULANT_ADD")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BLOOD_FLOW")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BODY_TEMPERATURE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BREATHE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DIALYSATE_FLOW")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DIALYSATE_TEMPERATURE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ELECTRICAL_CONDUCTIVITY")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EVENT_BIREF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("HEART_RATE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("KTV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PATIENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RECORD_TIME")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("RP_FLUID_FLOW")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SIGNS_STATUS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("STRETCH_PRESSURE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SYSTOLIC_BLOOD_PRESSURE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TRAETMENT_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TRANS_PRESSURE")
                        .HasColumnType("int");

                    b.Property<string>("TREATMENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UF")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UF_RATE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("VENOUS_PRESSURE")
                        .HasColumnType("decimal(18,2)");

                    b.ToView("view_MonitorDataInfo");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.ViewModel.MonitorViewData", b =>
                {
                    b.Property<decimal?>("ARTERIAL_PRESSURE")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("BED_LABEL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("BLOOD_FLOW")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("BODY_TEMPERATURE")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("BREATHE")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("CENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CLASS_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CLASS_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CREATE_AT")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DIALYSATE_TEMPERATURE")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("DOCTOR_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ELECTRICAL_CONDUCTIVITY")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("HEART_RATE")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("KTV")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("NURSE_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PATIENT_AGE")
                        .HasColumnType("int");

                    b.Property<string>("PATIENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PATIENT_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PATIENT_SEX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RECORD_TIME")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("RP_FLUID_FLOW")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("STRETCH_PRESSURE")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("SYSTOLIC_BLOOD_PRESSURE")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("TRANS_PRESSURE")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("UF")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("UF_RATE")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("VENOUS_PRESSURE")
                        .HasColumnType("decimal(8,2)");

                    b.ToView("view_HD_MONITORING");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.ViewModel.OnlineTreatmentStatsView", b =>
                {
                    b.Property<string>("CENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompleteCount")
                        .HasColumnType("int");

                    b.Property<string>("SortNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalCount")
                        .HasColumnType("int");

                    b.Property<int>("TreatingCount")
                        .HasColumnType("int");

                    b.ToView("view_OnlineTreatmentStatsInfo");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.ViewModel.PadPoliceFileView", b =>
                {
                    b.Property<string>("FILE_CONTENT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POLICE_ID")
                        .HasColumnType("nvarchar(max)");

                    b.ToView("view_PadPoliceFileInfo");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.ViewModel.PadPoliceView", b =>
                {
                    b.Property<string>("BED_LABEL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CLASS_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CLASS_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CREATE_AT")
                        .HasColumnType("datetime2");

                    b.Property<string>("CREATE_USER_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CREATE_USER_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("INST_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PATIENT_AGE")
                        .HasColumnType("int");

                    b.Property<string>("PATIENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PATIENT_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PATIENT_SEX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POLICE_DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POLICE_TITLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POLICE_TYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PRIORITY")
                        .HasColumnType("int");

                    b.Property<string>("REMARK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("STATE")
                        .HasColumnType("int");

                    b.Property<string>("TREATMENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TREAT_MEASURE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TREAT_PROCESS")
                        .HasColumnType("nvarchar(max)");

                    b.ToView("view_PadPoliceInfo");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.ViewModel.PatientBasicTreatView", b =>
                {
                    b.Property<decimal?>("ACTUAL_UF")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AFTER_HR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AFTER_SBP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AFTER_SP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AFTER_TEMPERATURE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AFTER_WEIGHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ATICOAGULANT_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("BEFORE_HR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BEFORE_SBP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BEFORE_SP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BEFORE_TEMPERATURE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BEFORE_WEIGHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DEFAULT_TREAT_TIME")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DIALYSATE_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIALYZER_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DRY_WEIGHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("FIRST_DOSE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("KEEP_DOSE")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PATIENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PRESET_UF")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TRAETMENT_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("TREATMENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TREATMENT_MODE")
                        .HasColumnType("nvarchar(max)");

                    b.ToView("view_PatientBasicTreatInfo");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.ViewModel.PatientGeneralView", b =>
                {
                    b.Property<string>("BED_LABEL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CLASS_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIALYSIS_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DOCTOR_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MEDICAL_TYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NURSE_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PATIENT_AGE")
                        .HasColumnType("int");

                    b.Property<string>("PATIENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PATIENT_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PATIENT_SEX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PATIENT_TYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TRAETMENT_DATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TREATMENT_START_DATE")
                        .HasColumnType("datetime2");

                    b.ToView("view_PatientGeneralInfo");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.ViewModel.TreatOrderView", b =>
                {
                    b.Property<string>("CENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EXEC_METHOD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EXEC_USER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IS_EXECED")
                        .HasColumnType("bit");

                    b.Property<string>("ORDER_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PATIENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SUBMIT_USER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TRAETMENT_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("TREATMENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.ToView("view_TreatOrderInfo");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.ViewModel.TreatmenCountView", b =>
                {
                    b.Property<string>("CENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManCount")
                        .HasColumnType("int");

                    b.Property<int>("NegativeCount")
                        .HasColumnType("int");

                    b.Property<int>("PositiveCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalCount")
                        .HasColumnType("int");

                    b.Property<int>("WomanCount")
                        .HasColumnType("int");

                    b.ToView("view_YearNewPatientCountInfo");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.ViewModel.TreatmentStatsView", b =>
                {
                    b.Property<string>("CENT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.ToView("view_YearNewPatientMonthlyCountInfo");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.Alarm.GMP_ALARM_ITEM", b =>
                {
                    b.HasOne("SR.GMP.DataEntity.System.SYS_INST_CENTER", "CENTER")
                        .WithMany()
                        .HasForeignKey("CENT_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SR.GMP.DataEntity.System.SYS_USER", "CREATE_USER")
                        .WithMany()
                        .HasForeignKey("CREATOR_ID");

                    b.HasOne("SR.GMP.DataEntity.System.SYS_USER", "MODIFY_USER")
                        .WithMany()
                        .HasForeignKey("MODIFIER_ID");

                    b.Navigation("CENTER");

                    b.Navigation("CREATE_USER");

                    b.Navigation("MODIFY_USER");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.Alarm.GMP_ALARM_ITEM_RULE", b =>
                {
                    b.HasOne("SR.GMP.DataEntity.System.SYS_USER", "CREATE_USER")
                        .WithMany()
                        .HasForeignKey("CREATOR_ID");

                    b.HasOne("SR.GMP.DataEntity.Alarm.GMP_ALARM_ITEM", "ALARM_ITEM")
                        .WithMany("ALARM_ITEM_RULE_LIST")
                        .HasForeignKey("ITEM_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SR.GMP.DataEntity.System.SYS_USER", "MODIFY_USER")
                        .WithMany()
                        .HasForeignKey("MODIFIER_ID");

                    b.Navigation("ALARM_ITEM");

                    b.Navigation("CREATE_USER");

                    b.Navigation("MODIFY_USER");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.Alarm.GMP_ALARM_RECORD_DATA", b =>
                {
                    b.HasOne("SR.GMP.DataEntity.Alarm.GMP_ALARM_RECORD", "ALARM_RECORD")
                        .WithMany("ALARM_RECORD_DATA_LIST")
                        .HasForeignKey("ALARM_RECORD_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ALARM_RECORD");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.Alarm.GMP_ALARM_RULE_CONFIG", b =>
                {
                    b.HasOne("SR.GMP.DataEntity.System.SYS_USER", "CREATE_USER")
                        .WithMany()
                        .HasForeignKey("CREATOR_ID");

                    b.HasOne("SR.GMP.DataEntity.System.SYS_USER", "MODIFY_USER")
                        .WithMany()
                        .HasForeignKey("MODIFIER_ID");

                    b.HasOne("SR.GMP.DataEntity.Alarm.GMP_ALARM_ITEM_RULE", "ALARM_ITEM_RULE")
                        .WithMany("ALARM_RULE_CONFIG_LIST")
                        .HasForeignKey("RULE_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ALARM_ITEM_RULE");

                    b.Navigation("CREATE_USER");

                    b.Navigation("MODIFY_USER");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.System.SYS_DICT_CATEGORY", b =>
                {
                    b.HasOne("SR.GMP.DataEntity.System.SYS_USER", "CREATE_USER")
                        .WithMany()
                        .HasForeignKey("CREATOR_ID");

                    b.HasOne("SR.GMP.DataEntity.System.SYS_USER", "MODIFY_USER")
                        .WithMany()
                        .HasForeignKey("MODIFIER_ID");

                    b.Navigation("CREATE_USER");

                    b.Navigation("MODIFY_USER");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.System.SYS_DICT_ITEM", b =>
                {
                    b.HasOne("SR.GMP.DataEntity.System.SYS_DICT_CATEGORY", "DICT_CATEGORY")
                        .WithMany("DICT_ITEM_LIST")
                        .HasForeignKey("CATEGORY_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SR.GMP.DataEntity.System.SYS_USER", "CREATE_USER")
                        .WithMany()
                        .HasForeignKey("CREATOR_ID");

                    b.HasOne("SR.GMP.DataEntity.System.SYS_USER", "MODIFY_USER")
                        .WithMany()
                        .HasForeignKey("MODIFIER_ID");

                    b.Navigation("CREATE_USER");

                    b.Navigation("DICT_CATEGORY");

                    b.Navigation("MODIFY_USER");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.System.SYS_INST", b =>
                {
                    b.HasOne("SR.GMP.DataEntity.System.SYS_USER", "CREATE_USER")
                        .WithMany()
                        .HasForeignKey("CREATOR_ID");

                    b.HasOne("SR.GMP.DataEntity.System.SYS_USER", "MODIFY_USER")
                        .WithMany()
                        .HasForeignKey("MODIFIER_ID");

                    b.Navigation("CREATE_USER");

                    b.Navigation("MODIFY_USER");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.System.SYS_INST_CENTER", b =>
                {
                    b.HasOne("SR.GMP.DataEntity.System.SYS_USER", "CREATE_USER")
                        .WithMany()
                        .HasForeignKey("CREATOR_ID");

                    b.HasOne("SR.GMP.DataEntity.System.SYS_INST", "INST")
                        .WithMany()
                        .HasForeignKey("INST_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SR.GMP.DataEntity.System.SYS_USER", "MODIFY_USER")
                        .WithMany()
                        .HasForeignKey("MODIFIER_ID");

                    b.Navigation("CREATE_USER");

                    b.Navigation("INST");

                    b.Navigation("MODIFY_USER");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.System.SYS_USER", b =>
                {
                    b.HasOne("SR.GMP.DataEntity.System.SYS_USER", "CREATE_USER")
                        .WithMany()
                        .HasForeignKey("CREATOR_ID");

                    b.HasOne("SR.GMP.DataEntity.System.SYS_USER", "MODIFY_USER")
                        .WithMany()
                        .HasForeignKey("MODIFIER_ID");

                    b.Navigation("CREATE_USER");

                    b.Navigation("MODIFY_USER");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.Alarm.GMP_ALARM_ITEM", b =>
                {
                    b.Navigation("ALARM_ITEM_RULE_LIST");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.Alarm.GMP_ALARM_ITEM_RULE", b =>
                {
                    b.Navigation("ALARM_RULE_CONFIG_LIST");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.Alarm.GMP_ALARM_RECORD", b =>
                {
                    b.Navigation("ALARM_RECORD_DATA_LIST");
                });

            modelBuilder.Entity("SR.GMP.DataEntity.System.SYS_DICT_CATEGORY", b =>
                {
                    b.Navigation("DICT_ITEM_LIST");
                });
#pragma warning restore 612, 618
        }
    }
}
